user: bandit0
pass: bandit0
Password for next level flawfully stored in an easily readable file named "readme", then accessed with the cat command.

user: bandit1
pass: 263JGJPfgU6LtdEvgfWU1XP5yac29mFx
Due to naming a file with a single dash (-), which conflicts with typical command-line options, I was able to exploit this by specifying the file's path using ./ to differentiate it from command options. 
By running the command cat ./- I bypassed the conflict and was able to read the contents of the file.

user: bandit2
pass: MNk8KNH3Usiio41PRUEoDFPqfxLPlSmx
Due to the flaw of using spaces in a file name, which can cause the shell to misinterpret the file name as separate arguments, I was able to obatin the password by escaping the spaces with a backslash.
Running "cat spaces\ in\ this\ filename" I was able to view the file's contents.

user: bandit3
pass: 2WmrDFRmJIq3IPxneAaMGhap0pFhF3NJ
Due to the flaw of hiding the file name by starting it with "...", I was able to exploit this level by using the ls -a command. After identifying the hidden file named ...Hiding-From-You, I used the cat command to read its contents

user: bandit4
pass: 4oQYVPkxZOOEOO5pTW81FB8j8lxXGUQw
I was able to exploit this level by using the ./ prefix to specify file path explicitly. By running "cat ./-file07", I bypassed the naming conflict and accessed the fileâ€™s contents.

user: bandit5
pass: HWasnPhtq9AVKe0dmk45nxy20cvUa6EG
I was able to exploit this level by using the find command. Specifically, I searched (find -type f -size 1033c), revealing the hidden file ".file2" inside of the directory "maybehere07".

user: bandit6
pass: morbNTDkSW6jIlUc0ymOdMaLnOlFVAaj
Located a file owned by user bandit7, group bandit6, with a size of 33 bytes using the find command. Specifically, "find / -user bandit7 -group bandit6 -size 33c 2>/dev/null", which revealed the password-containing file.

user: bandit7
pass: dfwvzFQi4mU0wfNbFOe9RoWskMLg7eEc
Used the awk command to locate the line starting with the word "millionth" and printed the contents of its second field. "awk '/^millionth/ {print $2;}' data.txt". 

user: bandit8
pass: 4CKMh1JI91bUIZZPXDqGanal4xvAg0JM
Used cat + sort and uniq to find the unique line in data.txt containing the password. "cat data.txt | sort | uniq -u"

user: bandit9
pass: FGUW5ilLVJrxX9kMYMmlN4MgbpfMiqey
Used the strings command to extract the human-readable text from data.txt. Specified the output to filter for lines with "=" using grep, in which one of the results contained the password. 

user: bandit10
pass: dtR173fZKb0RRsDFSGsg2RWnpNVj3qRr
Used cat to display data.txt contents, identified and decoded a single base64-encoded string, which revealed the password. 

user: bandit11
pass: 7x16WNeHIi5YkIhWsfFIqoognUTyj9Q4
Used the cat command combined with the tr command to reveal the password using subsitituion on the data.txt file.

user: bandit12
pass: FO5dwFsc0cbaIiH0h8J2eUks2vdTDwAn
Used a combination of commands including gzip, bxip2, and xxd to iterate through different files to search for the password in a hexdump of a repeatedly compressed file.

user: bandit13
pass: MU4VWeTyJk8ROof1qqmcBPaLh7lDCPvS
Obtained the password by using a private ssh to log into bandit14 and read its contents. 

user: bandit14
pass: 8xCjnmgoKbGLhHFAZlGE5Tmu4M2tKJQo
Password acquired by entering the current password on port 30000 via telnet.

user: bandit15
pass: kSkvUpMQ7lBYyCM4GBPvCvT1BfWRy0Dx
Password acquired similarly to the last one, except using an SSL connection this time.

user: bandit16
pass: EReVavePLFHtFlFsjn3hyzMlvSuSAcRD
Pass retrieved by submitting the password of the current level to a port on localhost in the range 31000 to 32000

user: bandit17
pass: x2gLTTjFwMOhQ8oWNbMN362QKxfRqGlO
obatained password using the diff function
pass obtained using a combination of cat, grep, and diff commands 

user: bandit18
pass: cGWpMaKXVwDUNgPAVJbWYuGHVn9zl3j8
pass obtained by circumventing .bashrc command to read the readme file

user: bandit19
pass: 0qXahG8ZjOVMN9Ghs7iOWsCfZyXOUbYO
obtained pass by using the setuid binary in the homedirectory.

user: bandit20
pass: EeoULMCra2q0dSkYj561DX7s1CpBuOBt
obtained pass by ssh'ing into bandit and using netcat to listen 

user: bandit21
pass: tRae0UfB9v0UzbCdn9cY0gQnds9GF58Q
obtained by looking in /etc/cron.d/ for the configuration and to what command is being executed.

user: bandit22
pass: 0Zf11ioIjMVN551jX3CmStKLYqjk54Ga
Sovled similar to the last level by using cron to access the password

user: bandit23
pass: gb8KRRCsshuZXI0tUuR6ypOFjiZbf3G8
solved by creating a shell script to access the pass containing file

user: bandit24
pass: iCi86ttT4KSNe1armKiwbQNmB3YJP3q4
obtained pass by brute forcing the pin and combining with password

user: bandit25
pass: s0773xxkk0MXfdqOfPRVr9L3jJBUOgCZ
solved by determining the shell used to access user bandit26 via diffferent commands

user: bandit26
pass: upsNCc7vzaRDx6oZC6GiR6ERwe1MowGB
used similar process to level 25 to obtain the password for 27

user: bandit27
pass: Yz9IpL0sBcCeuG7m9uQFt8ZNpS4HZRcN
found pass by cloning a github repo into directory and examining files for the secret

user: bandit28
pass: 4pT1t5DENaYuqnqvadYs1oE4QLCdjmJ7
solved similar to the last level by cloning a repo and using git commands to view the correct pass

user: bandit29
pass: qp30ex3VLz5MDG1n91YowTv4Q8l7CDZL
password found using git commands to searcha  repos for the password

user: bandit30
pass: fb5S2xb7bRyFmAvQYQGEqsbhVyJqhnDy
solved similar to the previous few levels by cloning a github repo and using different commands to search for password
